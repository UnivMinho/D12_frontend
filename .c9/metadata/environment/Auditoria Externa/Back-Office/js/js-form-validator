{"filter":false,"title":"js-form-validator","tooltip":"/Auditoria Externa/Back-Office/js/js-form-validator","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":872,"column":9},"action":"insert","lines":["/**","* Simple Encapsulation Class template","*/","(function (root) {","","\t\"use strict\";","","\t/**","\t * Common object params","\t * @type {Object}","\t */","\tvar common = {","\t\t\tpublicMethods: ['validate', 'formatString', 'destroy', 'reload', 'getFormHandle', 'getFields', 'showErrors', 'hideErrors'],","\t\t\tclassName: 'Validator'","\t\t},","","\t\t// main constructor","\t\tProtected = function (formHandle, submitCallback, settings) {","","\t\t\tformHandle.JsValidator = this;","","\t\t\tthis.settings = {","","\t\t\t\t// Validation of a current field after the events of \"change\", \"keyup\", \"blur\"","\t\t\t    onAir: true,","","\t\t\t    // Show validation errors","\t\t\t    showErrors: true,","","\t\t\t    // Auto-hide the error messages","\t\t\t    autoHideErrors: false,","","\t\t\t    // Timeout auto-hide error messages","\t\t\t    autoHideErrorsTimeout: 2000,","","\t\t\t    // Language error messages","\t\t\t    locale: 'en',","","\t\t\t    // Object for custom error messages","\t\t\t    messages: {},","","\t\t\t    // Object for custom rules","\t\t\t    rules: {},","","\t\t\t    // classname for error messages","\t\t\t    errorClassName: 'error',","","\t\t\t    // remove spaces from validation field values","\t\t\t    removeSpaces: false,","","\t\t\t    // tracking of new elements","\t\t\t    autoTracking: true,","","\t\t\t    // events list for binding","\t\t\t    eventsList: ['keyup', 'change', 'blur']","\t\t\t};","","","","","","","","","","\t\t\t","","\t\t\tvar self = this;","","\t\t\t// set handle","\t\t\tthis.formHandle = formHandle || null;","","\t\t\t// set callback","\t\t\tthis.submitCallback = submitCallback || null;","","\t\t\t// get fields and rules","\t\t\tthis.fields = this.getFields(this.formHandle.querySelectorAll('[data-rule]'));","","","","","","\t\t\t// apply custom settings","\t\t\tthis.applySettings(settings || {});","","","","","","","\t\t\tthis.submitCallback = this.submitCallback.bind(this);","\t\t\tthis._eventChangeWithDelay = this._eventChangeWithDelay.bind(this);","\t\t\tthis._eventChange = this._eventChange.bind(this);","\t\t\tthis._eventSubmit = this._eventSubmit.bind(this);","","","","\t\t\t// bind events","\t\t\tthis.submitCallback && this.eventsBuilder('addEventListener');","","","","\t\t\t","","","\t\t\t","\t\t\t// autotracking for new form elements","\t\t\tthis.settings.autoTracking && ('MutationObserver' in window) && new MutationObserver(function(mutationRecords) {","","\t\t\t    [].forEach.call(mutationRecords, function (mutation) {","\t\t\t        switch (mutation.type) {","\t\t\t            case 'subtree':","\t\t\t            case 'childList':","\t\t\t            \t","\t\t\t            \tvar reloadFlag = false,","\t\t\t            \t\tchildsArray = [];","","\t\t\t                [].forEach.call(mutation.addedNodes, function (targetElem) {","","\t\t\t                \tchildsArray = targetElem.querySelectorAll ? targetElem.querySelectorAll('*') : [];","","\t\t\t                \tif (['SELECT', 'INPUT', 'TEXTAREA', 'CHECKBOX', 'RADIOBUTTON'].indexOf(targetElem.tagName) !== -1) {","\t\t\t                \t\treloadFlag = true;","\t\t\t                \t};","","\t\t\t                \t!reloadFlag && [].forEach.call(childsArray, function (elem) {","\t\t\t                \t\tif (['SELECT', 'INPUT', 'TEXTAREA', 'CHECKBOX', 'RADIOBUTTON'].indexOf(elem.tagName) !== -1) {","\t\t\t                \t\t\treloadFlag = true;","\t\t\t                \t\t}","\t\t\t                \t});","","\t\t\t                \t","\t\t\t                });","\t\t\t                reloadFlag && self.reload();","\t\t\t            break;","\t\t\t        }","\t\t\t    });","","\t\t\t}).observe(this.formHandle, {","\t\t\t    childList: true,","\t\t\t    subtree: true","\t\t\t});","","\t\t\t","","\t\t\treturn this;","\t\t};","","","\t/**","\t * Main prototype","\t * @type {Object}","\t */","\tProtected.prototype = {","","","","","","\t\tmessages: {","\t\t\t\t\t    ","\t\t\t// English","\t\t    en: {","\t\t        required: {","\t\t            empty: 'This field is required',","\t\t            incorrect: 'Incorrect value'","\t\t        },","\t\t        notzero: {","\t\t            empty: 'Please make a selection',","\t\t            incorrect: 'Incorrect value'","\t\t        },","\t\t        integer: {","\t\t            empty: 'Enter an integer value',","\t\t            incorrect: 'Incorrect integer value'","\t\t        },","\t\t        float: {","\t\t            empty: 'Enter an float number',","\t\t            incorrect: 'Incorrect float'","\t\t        },","\t\t        min: {","\t\t            empty: 'Enter more',","\t\t            incorrect: 'Enter more'","\t\t        },","\t\t        max: {","\t\t            empty: 'Enter less',","\t\t            incorrect: 'Enter less'","\t\t        },","\t\t        between: {","\t\t            empty: 'Enter the between {0}-{1}',","\t\t            incorrect: 'Enter the between {0}-{1}'","\t\t        },","\t\t        name: {","\t\t            empty: 'Please, enter your name',","\t\t            incorrect: 'Incorrect name'","\t\t        },","\t\t        lastname: {","\t\t            empty: 'Please, enter your lastname',","\t\t            incorrect: 'Incorrect lastname'","\t\t        },","\t\t        phone: {","\t\t            empty: 'Please, enter the phone number',","\t\t            incorrect: 'Incorrect phone number'","\t\t        },","\t\t        email: {","\t\t            empty: 'Please, enter your email address',","\t\t            incorrect: 'Incorrect email address'","\t\t        },","\t\t        length: {","\t\t            empty: 'Please, Enter a minimum of {0} characters and a maximum of {1}',","\t\t            incorrect: 'Incorrect. Enter a minimum of {0} characters and a maximum of {1}'","\t\t        },","\t\t        minlength: {","\t\t            empty: 'Please, enter at least {0} characters',","\t\t            incorrect: 'You have entered less than {0} characters'","\t\t        },","\t\t        maxlength: {","\t\t            empty: 'Please, enter at maximum {0} characters',","\t\t            incorrect: 'You have entered more than {0} characters'","\t\t        },","\t\t        maxfilesize: {","\t\t            empty: 'The size of one or more selected files larger than {0} {1}',","\t\t            incorrect: 'The size of one or more selected files larger than {0} {1}'","\t\t        },","\t\t        fileextension: {","\t\t            empty: 'Select file',","\t\t            incorrect: 'One or more files have an invalid type'","\t\t        }","\t\t    }","\t\t},","","\t\t// rules","\t\trules: {","\t\t    required: function (value) {","\t\t        return '' !== value;","\t\t    },","\t\t    notzero: function (value) {","\t\t        return parseInt(value, 10) > 0;","\t\t    },","\t\t    integer: function (value) {","\t\t        return new RegExp(/^[0-9]+$/gi).test(value);","\t\t    },","\t\t    float: function (value) {","\t\t        value = value.toString().replace(/\\,/, '.');","\t\t        return this.integer(value) || new RegExp(/^([0-9])+(\\.)([0-9]+$)/gi).test(value);","\t\t    },","\t\t    min: function (value, params) {","\t\t        if (this.float(value)) {","\t\t            return parseFloat(value) >= parseFloat(params[0]);","\t\t        }","\t\t        return parseInt(value, 10) >= parseInt(params[0], 10);","\t\t    },","\t\t    max: function (value, params) {","\t\t        if (this.float(value)) {","\t\t            return parseFloat(value) <= parseFloat(params[0]);","\t\t        }","\t\t        return parseInt(value, 10) <= parseInt(params[0], 10);","\t\t    },","\t\t    between: function (value, params) {","\t\t        ","\t\t        params[1] = params[1] || 999999;","","\t\t        if (this.float(value)) {","\t\t            return parseFloat(value) >= parseFloat(params[0]) && parseFloat(value) <= parseFloat(params[1]);","\t\t        }","\t\t        if (this.integer(value)) {","\t\t            return parseInt(value, 10) >= parseInt(params[0], 10) && parseInt(value, 10) <= parseInt(params[1], 10);","\t\t        }","\t\t        return false;","\t\t    },","\t\t    name: function (value) {","\t\t        if (value.length > 0 && value.length < 2) {","\t\t            return false;","\t\t        }","\t\t        return new RegExp(/^[a-zA-Z\\sа-яА-ЯёЁ\\-]+$/g).test(value);","\t\t    },","\t\t    lastname: function (value) {","\t\t        return this.name(value);","\t\t    },","\t\t    phone: function (value) {","\t\t        if (value.replace(/[^0-9]+/gi, '').match(/[0-9]+/gi) && value.replace(/[^0-9]+/gi, '').match(/[0-9]+/gi)[0].length < 6) {","\t\t            return false;","\t\t        }","\t\t        return new RegExp(/^(?:(?:\\(?(?:00|\\+)([1-4]\\d\\d|[1-9]\\d?)\\)?)?[\\-\\.\\ \\\\\\/]?)?((?:\\(?\\d{1,}\\)?[\\-\\.\\ \\\\\\/]?){0,})(?:[\\-\\.\\ \\\\\\/]?(?:#|ext\\.?|extension|x)[\\-\\.\\ \\\\\\/]?(\\d+))?$/g).test(value);","\t\t    },","\t\t    email: function (value) {","\t\t        return new RegExp(/^((\"[\\w-\\s]+\")|([\\w\\-]+(?:\\.[\\w\\-]+)*)|(\"[\\w-\\s]+\")([\\w\\-]+(?:\\.[\\w\\-]+)*))(@((?:[\\w\\-]+\\.)*\\w[\\w\\-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i).test(value);","\t\t    },","\t\t    length: function (value, params) {","\t\t        return this.between(value.replace(/\\s{2,}/g, ' ').length, params);","\t\t    },","\t\t    maxlength: function (value, params) {","\t\t        return this.max(value.replace(/\\s{2,}/g, ' ').length, params);","\t\t    },","\t\t    minlength: function (value, params) {","\t\t        return this.min(value.replace(/\\s{2,}/g, ' ').length, params);","\t\t    },","\t\t    maxfilesize: function (value, params) {","\t\t        var i,","\t\t            l = value.length,","\t\t            unitsOffset = 1;","","\t\t        switch (params[1].toLowerCase()) {","\t\t        case 'b':","\t\t            unitsOffset = 1;","\t\t            break;","","\t\t        case 'kb':","\t\t            unitsOffset = 1024;","\t\t            break;","","\t\t        case 'mb':","\t\t            unitsOffset = 1048576;","\t\t            break;","","\t\t        case 'gb':","\t\t            unitsOffset = 1073741824;","\t\t            break;","","\t\t        case 'tb':","\t\t            unitsOffset = 1099511627776;","\t\t            break;","\t\t        }","","\t\t        for (i = 0; i < l; i += 1) {","\t\t            if (parseFloat(value[i]) > (parseFloat(params[0]) * unitsOffset)) {","\t\t                return false;","\t\t            }","\t\t        }","","\t\t        return true;","\t\t    },","\t\t    fileextension: function (value, params) {","\t\t        var i,","\t\t            a,","\t\t            l = params.length,","\t\t            b = value.length,","\t\t            cmpResC = 0;","","\t\t        for (i = 0; i < l; i += 1) {","\t\t            for (a = 0; a < b; a += 1) {","\t\t                if (params[i] === value[a].split('.').pop()) {","\t\t                    cmpResC += 1;","\t\t                }","\t\t            }","\t\t        }","","\t\t        return value.length === cmpResC ? true : false;","\t\t    }","\t\t},","","\t\torderFields: function (attrName, attrValue) {","","\t\t    var self = this,","\t\t    \tretObj = {};","","\t\t    !!attrName && !!attrValue && Object.keys(this.fields).forEach(function (field) {","\t\t    \tif (self.fields[field].handle[attrName] && self.fields[field].handle[attrName] === attrValue) {","\t\t    \t    retObj[field] = self.fields[field];","\t\t    \t}","\t\t    });","","\t\t    return retObj;","\t\t},","\t\t_eventSubmit: function (e) {","","\t\t    e.preventDefault();","","\t\t    //hide errors","\t\t    this.hideErrors(false, true);","","\t\t    //show errors if validation failure","\t\t    !this.validate() && this.showErrors();","","\t\t    //callback","\t\t    (this.submitCallback(this.errors || null, this.errors ? false : true) === true) && this.formHandle.submit();","\t\t},","\t\t_eventChange: function (e) {","","\t\t\tvar radioBtns,","\t\t\t\tself = this;","","\t\t\t//remove spaces","\t\t\tif (this.settings.removeSpaces && new RegExp(/\\s{2,}/g).test(e.target.value)) {","\t\t\t    e.target.value = e.target.value.replace(/\\s{2,}/g, ' ');","\t\t\t}","","\t\t\t//if is radio buttons","\t\t\tif (e.target.type === 'radio') {","","\t\t\t    //get radio groupe","\t\t\t    radioBtns = this.orderFields('name', e.target.name);","","\t\t\t    Object.keys(radioBtns).forEach(function (btn) {","\t\t\t    \tself.hideErrors(radioBtns[btn].handle);","\t\t\t    });","","\t\t\t} else {","\t\t\t    //hide errors for this","\t\t\t    this.hideErrors(e.target);","\t\t\t}","","","","","\t\t\t//validate and show errors for this","\t\t\tif (!this.validate(e.target)) {","","\t\t\t    this.showErrors(e.target);","\t\t\t    !this.settings.showErrors && this.submitCallback(this.errors, false);","\t\t\t    ","\t\t\t}","\t\t},","\t\t_eventChangeWithDelay: function (e) {","\t\t\tvar self = this;","","\t\t    if (this.intervalID) {","\t\t        clearTimeout(this.intervalID);","\t\t    }","","\t\t    this.intervalID = setTimeout(function () {","\t\t        self._eventChange.apply(self, [e]);","\t\t    }, 400);","\t\t},","\t\t","","\t\tapplySettings: function (settings) {","","\t\t\tvar self = this;","","\t\t\t// apply rules","\t\t\tsettings.rules && Object.keys(settings.rules).forEach(function(ruleName) {","\t\t\t\tself.rules[ruleName] = settings.rules[ruleName];","\t\t\t});","","\t\t\t// apply messages","\t\t\tsettings.messages && Object.keys(settings.messages).forEach(function(locale) {","\t\t\t    Object.keys(settings.messages[locale]).forEach(function (ruleName) {","\t\t\t    \tObject.keys(settings.messages[locale][ruleName]).forEach(function (param) {","\t\t\t    \t\tself.settings.messages[locale] = self.settings.messages[locale] || {};","\t\t\t    \t\tself.settings.messages[locale][ruleName] = self.settings.messages[locale][ruleName] || {};","\t\t\t    \t\tself.settings.messages[locale][ruleName][param] = settings.messages[locale][ruleName][param];","\t\t\t    \t});","\t\t\t    });","\t\t\t});","","\t\t\t// apply other settings","\t\t\tObject.keys(settings).forEach(function (param) {","\t\t\t\tself.settings[param] = settings[param];","\t\t\t});","","\t\t\treturn this;","\t\t},","","","\t\tgetFields: function (fields) {","","\t\t\tvar retData = {},","\t\t\t\trules = [],","\t\t\t\tparams = [];","","\t\t\tfields = fields || this.formHandle.querySelectorAll('[data-rule]');","","\t\t\t// each fields with data-rule attribute","\t\t\tObject.keys(fields).forEach(function (fieldIndex) {","","\t\t\t\trules = fields[fieldIndex].getAttribute('data-rule').split('|');","","\t\t\t\tObject.keys(rules).forEach(function (ruleIndex) {","","\t\t\t\t\t// parse rule","\t\t\t\t\tif (rules[ruleIndex].match(/-/gi)) {","","\t\t\t\t\t    params = rules[ruleIndex].split('-');","\t\t\t\t\t    rules[ruleIndex] = params[0];","\t\t\t\t\t    params = params.splice(1);","","\t\t\t\t\t    rules[ruleIndex] = [rules[ruleIndex], params];","\t\t\t\t\t} else {","\t\t\t\t\t    rules[ruleIndex] = [rules[ruleIndex], []];","\t\t\t\t\t}","\t\t\t\t});","","\t\t\t\tretData[fieldIndex] = {","\t\t\t\t    name: fields[fieldIndex].getAttribute('name'),","\t\t\t\t    rules: rules,","\t\t\t\t    defaultValue: fields[fieldIndex].getAttribute('data-default'),","\t\t\t\t    handle: fields[fieldIndex],","\t\t\t\t    intervalID: null","\t\t\t\t};","\t\t\t});","","\t\t\treturn retData;","\t\t},","","\t\tvalidate: function (validationField) {","","\t\t\tvar self = this,","\t\t\t\tfields = validationField ? this.getFields([validationField]) : this.fields,","\t\t\t\tresult,","\t\t\t\truleName,","\t\t\t\tparams,","\t\t\t\tdefaultValue,","\t\t\t\tvalue,","\t\t\t\tmessage,","\t\t\t\tmessageType = null;","","\t\t\tthis.errors = this.errors ? null : this.errors;","","\t\t\tObject.keys(fields).forEach(function (n) {","\t\t\t\t","\t\t\t\tresult = true;","","\t\t\t\t// loop rules of this field","\t\t\t\tfields[n].rules && Object.keys(fields[n].rules).forEach(function (ruleIndex) {","\t\t\t\t\t","\t\t\t\t\t// set rule data","\t\t\t\t\truleName = fields[n].rules[ruleIndex][0];","\t\t\t\t\tparams = fields[n].rules[ruleIndex][1];","\t\t\t\t\tdefaultValue = fields[n].defaultValue;","\t\t\t\t\tvalue = fields[n].handle.value;","","","\t\t\t\t\tswitch (fields[n].handle.type) {","\t\t\t\t\t\t","\t\t\t\t\t\tcase 'checkbox':","\t\t\t\t\t\t\t!fields[n].handle.checked && (value = '');","\t\t\t\t\t\tbreak;","","\t\t\t\t\t\tcase 'radio':","\t\t\t\t\t\t\t// get radio groupe","\t\t\t\t\t\t\tvar radioBtns = self.orderFields('name', fields[n].handle.name),","\t\t\t\t\t\t\t\tchecked = false;","","\t\t\t\t\t\t\tObject.keys(radioBtns).forEach(function (i) {","\t\t\t\t\t\t\t\tradioBtns[i].handle.checked && (checked = true);","\t\t\t\t\t\t\t});","","\t\t\t\t\t\t\tif (!checked) {","\t\t\t\t\t\t\t    ","\t\t\t\t\t\t\t    // add an error to one element","\t\t\t\t\t\t\t    Object.keys(radioBtns).forEach(function (i) {","\t\t\t\t\t\t\t    \ttry {","\t\t\t\t\t\t\t    \t    message = self.settings.messages[self.settings.locale][ruleName].empty;","\t\t\t\t\t\t\t    \t} catch (e) {","\t\t\t\t\t\t\t    \t    message = self.messages[self.settings.locale][ruleName].empty;","\t\t\t\t\t\t\t    \t}","\t\t\t\t\t\t\t    });","","\t\t\t\t\t\t\t    // set value as for empty rules","\t\t\t\t\t\t\t    value = '';","\t\t\t\t\t\t\t}","\t\t\t\t\t\tbreak;","","\t\t\t\t\t\tcase 'file':","","\t\t\t\t\t\t\t// if the files were selected","\t\t\t\t\t\t\tif (fields[n].handle.files && fields[n].handle.files.length) {","","\t\t\t\t\t\t\t\tvalue = [];","","\t\t\t\t\t\t\t\tObject.keys(fields[n].handle.files).forEach(function (fileIndex) {","","\t\t\t\t\t\t\t\t\tswitch (ruleName) {","\t\t\t\t\t\t\t\t\t\tcase 'maxfilesize':","\t\t\t\t\t\t\t\t\t\t\tvalue.push(fields[n].handle.files[fileIndex].size);","\t\t\t\t\t\t\t\t\t\tbreak;","","\t\t\t\t\t\t\t\t\t\tcase 'fileextension':","\t\t\t\t\t\t\t\t\t\t\tvalue.push(fields[n].handle.files[fileIndex].name);","\t\t\t\t\t\t\t\t\t\tbreak;","\t\t\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t\t});","","\t\t\t\t\t\t\t}","","\t\t\t\t\t\tbreak;","\t\t\t\t\t}","","","\t\t\t\t\tif (result && !(value === '' && !fields[n].rules.join('|').match(/\\|{0,1}required\\|{0,1}/))) {","","\t\t\t\t\t\t// if exist default value and value is eq default","\t\t\t\t\t\tif (result && defaultValue && value !== defaultValue) {","","\t\t\t\t\t\t    result = false;","\t\t\t\t\t\t    messageType = 'incorrect';","","\t\t\t\t\t\t// if default value not exist","\t\t\t\t\t\t} else if (result && self.rules[ruleName] && !self.rules[ruleName](value, params)) {","","\t\t\t\t\t\t    // set message to empty data","\t\t\t\t\t\t    if ('' === value) {","\t\t\t\t\t\t        result = false;","\t\t\t\t\t\t        messageType = 'empty';","","\t\t\t\t\t\t    // set message to incorrect data","\t\t\t\t\t\t    } else {","\t\t\t\t\t\t        result = false;","\t\t\t\t\t\t        messageType = 'incorrect';","\t\t\t\t\t\t    }","\t\t\t\t\t\t}","","\t\t\t\t\t\tif (result) {","\t\t\t\t\t\t    self.hideErrors(fields[n].handle, true);","\t\t\t\t\t\t","\t\t\t\t\t\t} else {","","\t\t\t\t\t\t    // define errors stack if not exist","\t\t\t\t\t\t    self.errors = self.errors || {};","","\t\t\t\t\t\t    // append error messages","\t\t\t\t\t\t    if (ruleName === 'required' && fields[n].rules[1] && fields[n].rules[1][0]) {","\t\t\t\t\t\t        ruleName = fields[n].rules[1][0];","\t\t\t\t\t\t        messageType = 'empty';","\t\t\t\t\t\t    }","\t\t\t\t\t\t    ","\t\t\t\t\t\t    try {","\t\t\t\t\t\t        try {","\t\t\t\t\t\t            message = self.settings.messages[self.settings.locale][ruleName][messageType];","\t\t\t\t\t\t        } catch (e) {","\t\t\t\t\t\t            message = self.messages[self.settings.locale][ruleName][messageType];","\t\t\t\t\t\t        }","\t\t\t\t\t\t    } catch (e) {","\t\t\t\t\t\t        ruleName = 'required';","\t\t\t\t\t\t        message = self.messages[self.settings.locale][ruleName][messageType];","\t\t\t\t\t\t    }","","\t\t\t\t\t\t    // push value into params if params is empty","\t\t\t\t\t\t    !params.length && params.push(value);","","\t\t\t\t\t\t    // add errors","\t\t\t\t\t\t    self.errors[n] = {","\t\t\t\t\t\t        name: fields[n].name,","\t\t\t\t\t\t        errorText: self.formatString(message, params)","\t\t\t\t\t\t    };","","\t\t\t\t\t\t    // call callback if exist","\t\t\t\t\t\t    if (!self.submitCallback) {","\t\t\t\t\t\t        self.errors[n].handle = fields[n].handle;","\t\t\t\t\t\t    }","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t});","\t\t\t});","","","\t\t\t// run callback if callback is exists and not errors or return error data object","\t\t\tif (this.submitCallback) {","\t\t\t    return (this.errors) ? false : true;","\t\t\t}","","\t\t\treturn this.errors || true;","","\t\t},","","","\t\thideErrors: function (validationField, removeClass) {","","\t\t    var self = this,","\t\t    \terrorDiv;","","","\t\t\tObject.keys(this.fields).forEach(function (n) {","\t\t       \tif ((validationField && validationField === self.fields[n].handle) || !validationField) {","","\t\t       \t\terrorDiv = self.fields[n].handle.nextElementSibling;","","\t\t       \t\t// remove class error","\t\t\t\t\tremoveClass && self.fields[n].handle.classList.remove(self.settings.errorClassName);","","\t\t\t\t\t// remove error element","\t\t       \t\terrorDiv && (errorDiv.getAttribute('data-type') === 'validator-error') && errorDiv.parentNode.removeChild(errorDiv);","\t\t       \t}","\t\t\t});","","\t\t},","","\t\tshowErrors: function (validationField) {","","\t\t\tvar self = this,","\t\t\t\terrorDiv,","\t\t\t\tinsertNodeError = function (refNode, errorObj) {","","\t\t\t\t\t// set error class","\t\t\t\t\trefNode.classList.add(self.settings.errorClassName);","","\t\t\t\t\t// check to error div element exist","\t\t\t\t\tif (refNode.nextElementSibling && refNode.nextElementSibling.getAttribute('data-type') === 'validator-error') {","\t\t\t\t\t\treturn;","\t\t\t\t\t}","","\t\t\t\t\t// insert error element","\t\t\t\t\tif (self.settings.showErrors) {","\t\t\t\t\t\terrorDiv = document.createElement('div');","\t\t\t\t\t\terrorDiv.setAttribute('class', self.settings.errorClassName);","\t\t\t\t\t\terrorDiv.setAttribute('data-type', 'validator-error');","\t\t\t\t\t\terrorDiv.innerHTML = errorObj.errorText;","\t\t\t\t\t\trefNode.parentNode.insertBefore(errorDiv, refNode.nextSibling);","\t\t\t\t\t}","\t\t\t\t};","","","","","\t\t\tObject.keys(this.errors).forEach(function (r) {","\t\t\t\t","\t\t\t\t// show error to specified field","\t\t\t\tif (validationField) {","","\t\t\t\t\tObject.keys(self.fields).forEach(function (n) {","\t\t\t\t\t\t(self.fields[n].handle.getAttribute('name') === validationField.getAttribute('name')) && insertNodeError(self.fields[n].handle, self.errors[r]);","\t\t\t\t\t});","","\t\t\t\t// show error to all fields","\t\t\t\t} else {","\t\t\t\t    if (r === '0' || (r > 0 && self.fields[r].name !== self.fields[r - 1].name)) {","\t\t\t\t        insertNodeError(self.fields[r].handle, self.errors[r]);","\t\t\t\t    }","\t\t\t\t}","\t\t\t});","","","","","","\t\t\t// auto hide errors","\t\t\tif (this.settings.autoHideErrors) {","\t\t\t\t","\t\t\t\t// for all fields","\t\t\t\tif (!validationField) {","","\t\t\t\t    if (this.intervalID) {","\t\t\t\t        clearTimeout(this.intervalID);","\t\t\t\t    }","","\t\t\t\t    this.intervalID = setTimeout(function () {","\t\t\t\t        self.intervalID = null;","\t\t\t\t        self.hideErrors(false);","\t\t\t\t    }, this.settings.autoHideErrorsTimeout);","","\t\t\t\t// for current field","\t\t\t\t} else {","","\t\t\t\t    if (validationField.intervalID) {","\t\t\t\t        clearTimeout(validationField.intervalID);","\t\t\t\t    }","","\t\t\t\t    if (!this.intervalID) {","\t\t\t\t        validationField.intervalID = setTimeout(function () {","\t\t\t\t            validationField.intervalID = null;","\t\t\t\t            self.hideErrors(validationField);","\t\t\t\t        }, this.settings.autoHideErrorsTimeout);","\t\t\t\t    }","\t\t\t\t}","\t\t\t}","\t\t},","","","\t\t/*","\t\t* Get Form handle","\t\t* @return {element} - Form handle","\t\t*/","\t\tgetFormHandle: function () {","\t\t    return this.formHandle;","\t\t},","","\t\t/*","\t\t* Formatting string. Replace string","\t\t* @param {string} string - Source string. Example: \"{0} age {1} years.\"","\t\t* @param {array} params - An array of values​​, which will be replaced with markers. Example: ['Bob', 36]","\t\t* @return {string} - Formatted string with replacing markers. Example \"Bob age 36 years\"","\t\t*/","\t\tformatString: function (string, params) {","\t\t    return string.replace(/\\{(\\d+)\\}/gi, function (match, number) {","\t\t        return (match && params[number]) ? params[number] : '';","\t\t    });","\t\t},","","\t\t/*","\t\t* Destroy validator","\t\t*/","\t\tdestroy: function () {","\t\t   ","\t\t    //hide errors","\t\t    this.hideErrors(false, true);","","\t\t    // remove events","\t\t    this.eventsBuilder('removeEventListener');","","\t\t},","","\t\t/*","\t\t* Reload validator.","\t\t* Example 1: reload(function (err, res) {...}, {autoHideErrors: false})","\t\t* Example 2: reload({autoHideErrors: false})","\t\t* @param {function} [submitCallback] - Submit callback function","\t\t* @param {object} [settings] - Settings object","\t\t*/","\t\treload: function (submitCallback, settings) {","","\t\t\tthis.destroy();","","\t\t    //set variables","\t\t    switch (arguments.length) {","","\t\t    case 2:","\t\t        this.submitCallback = submitCallback;","\t\t        this.settings = settings;","\t\t       \tbreak;","","\t\t    case 1:","\t\t        this.settings = submitCallback;","\t\t        break;","\t\t    }","","\t\t    this.fields = this.getFields(this.formHandle.querySelectorAll('[data-rule]'));","\t\t    this.submitCallback && this.eventsBuilder('addEventListener');","\t\t    this.applySettings(settings || {});","","\t\t},","\t\teventsBuilder: function (actionName) {","","\t\t\tvar self = this;","","","\t\t\tthis.formHandle[actionName]('submit', this._eventSubmit);","","\t\t\t// air mode","\t\t\tthis.settings.onAir && Object.keys(this.fields).forEach(function (field) {","\t\t\t\t","\t\t\t\t[].forEach.call(self.settings.eventsList, function (event) {","","\t\t\t\t\tif (event === 'keyup') {","\t\t\t\t\t    self.fields[field].handle[actionName](event, self._eventChangeWithDelay);","\t\t\t\t\t} else {","\t\t\t\t\t    self.fields[field].handle[actionName](event, self._eventChange);","\t\t\t\t\t}","\t\t\t\t});","\t\t\t});","\t\t\t","\t\t\t","\t\t}","\t};","","\t/**","\t * Encapsulation","\t * @return {Object} - this handle","\t */","\troot[common.className] = function () {","","\t\tfunction construct(constructor, args) {","","\t\t\tfunction Class() {","\t\t\t\treturn constructor.apply(this, args);","\t\t\t}","\t\t\tClass.prototype = constructor.prototype;","\t\t\treturn new Class();","\t\t}","","\t\tvar original = construct(Protected, arguments),","\t\t\tPublicly = function () {};","","\t\tPublicly.prototype = {};","\t\t[].forEach.call(common.publicMethods, function (member) {","\t\t\tPublicly.prototype[member] = function () {","\t\t\t\treturn original[member].apply(original, arguments);","\t\t\t};","\t\t});","","\t\treturn new Publicly(arguments);","\t};","","}(this));"],"id":1}]]},"ace":{"folds":[],"scrolltop":180,"scrollleft":0,"selection":{"start":{"row":606,"column":0},"end":{"row":606,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1607876337528,"hash":"e1e879ead1ae17f6ecac83a8d00f986b562a0d2a"}